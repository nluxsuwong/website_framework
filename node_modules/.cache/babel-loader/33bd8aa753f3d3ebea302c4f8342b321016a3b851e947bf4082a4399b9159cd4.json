{"ast":null,"code":"var _jsxFileName = \"/Users/nashluxsuwong/Desktop/updated/src/App.tsx\";\n// // src/views/Home/Home.tsx\n// import { useEffect } from 'react'\n// import Header from './views/Home/components/Header'\n// import Hero from './views/Home/components/Hero'\n// import Roadmap from './views/Home/components/Roadmap'\n// import Tokenomics from './views/Home/components/Tokenomics'\n// import Partners from './views/Home/components/Partners'\n// import Social from './views/Home/components/Social'\n// import Footer from './views/Home/components/Footer'\n// import ClipboardJS from 'clipboard'\n\n// const Home = () => {\n//   useEffect(() => {\n//     // Initialize ClipboardJS\n//     const clipboard = new ClipboardJS('.js-clipboard')\n\n//     // Smooth scrolling for navigation links\n//     const links = document.querySelectorAll<HTMLAnchorElement>(\n//       '.nav-main a[href^=\"#\"]'\n//     )\n//     links.forEach((link) => {\n//       link.addEventListener('click', (e: Event) => {\n//         e.preventDefault()\n//         const targetId = (e.currentTarget as HTMLAnchorElement).getAttribute(\n//           'href'\n//         )\n//         if (targetId) {\n//           if (targetId === '#') {\n//             window.scrollTo({ top: 0, behavior: 'smooth' })\n//           } else {\n//             const targetElement = document.querySelector(targetId)\n//             if (targetElement) {\n//               targetElement.scrollIntoView({ behavior: 'smooth' })\n//             }\n//           }\n//         }\n//       })\n//     })\n\n//     return () => clipboard.destroy() // Cleanup on component unmount\n//   }, [])\n\n//   return (\n//     <>\n//       <Header />\n//       <div style={{ overflow: 'hidden' }}>\n//         <Hero />\n//         <Roadmap />\n//         <Tokenomics />\n//         <Partners />\n//         <Social />\n//         <Footer />\n//       </div>\n//     </>\n//   )\n// }\n\n// export default Home\n// src/App.tsx\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport Home from './views/Home/Home';\n// Import other pages when they are created\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: 'Montserrat', sans-serif;\n    background-color: black;\n    color: white;\n  }\n`;\n_c = GlobalStyle;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Switch","createGlobalStyle","Home","jsxDEV","_jsxDEV","GlobalStyle","_c","App","children","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","component","_c2","$RefreshReg$"],"sources":["/Users/nashluxsuwong/Desktop/updated/src/App.tsx"],"sourcesContent":["// // src/views/Home/Home.tsx\n// import { useEffect } from 'react'\n// import Header from './views/Home/components/Header'\n// import Hero from './views/Home/components/Hero'\n// import Roadmap from './views/Home/components/Roadmap'\n// import Tokenomics from './views/Home/components/Tokenomics'\n// import Partners from './views/Home/components/Partners'\n// import Social from './views/Home/components/Social'\n// import Footer from './views/Home/components/Footer'\n// import ClipboardJS from 'clipboard'\n\n// const Home = () => {\n//   useEffect(() => {\n//     // Initialize ClipboardJS\n//     const clipboard = new ClipboardJS('.js-clipboard')\n\n//     // Smooth scrolling for navigation links\n//     const links = document.querySelectorAll<HTMLAnchorElement>(\n//       '.nav-main a[href^=\"#\"]'\n//     )\n//     links.forEach((link) => {\n//       link.addEventListener('click', (e: Event) => {\n//         e.preventDefault()\n//         const targetId = (e.currentTarget as HTMLAnchorElement).getAttribute(\n//           'href'\n//         )\n//         if (targetId) {\n//           if (targetId === '#') {\n//             window.scrollTo({ top: 0, behavior: 'smooth' })\n//           } else {\n//             const targetElement = document.querySelector(targetId)\n//             if (targetElement) {\n//               targetElement.scrollIntoView({ behavior: 'smooth' })\n//             }\n//           }\n//         }\n//       })\n//     })\n\n//     return () => clipboard.destroy() // Cleanup on component unmount\n//   }, [])\n\n//   return (\n//     <>\n//       <Header />\n//       <div style={{ overflow: 'hidden' }}>\n//         <Hero />\n//         <Roadmap />\n//         <Tokenomics />\n//         <Partners />\n//         <Social />\n//         <Footer />\n//       </div>\n//     </>\n//   )\n// }\n\n// export default Home\n// src/App.tsx\nimport React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { createGlobalStyle } from 'styled-components'\nimport Home from './views/Home/Home'\n// Import other pages when they are created\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: 'Montserrat', sans-serif;\n    background-color: black;\n    color: white;\n  }\n`\n\nconst App = () => {\n  return (\n    <Router>\n      <GlobalStyle />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        {/* Add more routes for other pages */}\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,SAASC,iBAAiB,QAAQ,mBAAmB;AACrD,OAAOC,IAAI,MAAM,mBAAmB;AACpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAGJ,iBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAK,EAAA,GANKD,WAAW;AAQjB,MAAME,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEH,OAAA,CAACN,MAAM;IAAAU,QAAA,gBACLJ,OAAA,CAACC,WAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfR,OAAA,CAACJ,MAAM;MAAAQ,QAAA,eACLJ,OAAA,CAACL,KAAK;QAACc,IAAI,EAAC,GAAG;QAACC,KAAK;QAACC,SAAS,EAAEb;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAAAI,GAAA,GAVKT,GAAG;AAYT,eAAeA,GAAG;AAAA,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}